{"version":3,"sources":["components/LandingPage.js","components/About.js","components/projects/PythonProjs.js","components/projects/JavaProjs.js","components/projects/Projects.js","components/Resume.js","components/Contact.js","components/Main.js","AppLight.css.js","components/AppLight.js","AppDark.css.js","components/AppDark.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","props","style","width","margin","styling","landingGrid","col","avatarImg","src","alt","bannerText","bannerTextH1","bannerTextH2","bannerTextHr","bannerTextP","socialLinks","href","rel","target","icon","size","color","About","Component","PythonProjs","className","projectsGrid","shadow","minWidth","textAlign","height","background","border","colored","name","JavaProjs","Projects","state","activeTab","this","onChange","tabId","setState","ripple","getContent","Resume","Contact","Main","console","log","exact","path","headerColor","display","paddingTop","paddingBottom","fontSize","fontWeight","marginBottom","marginTop","borderTop","backgroundColor","flexDirection","alignItems","opacity","borderRadius","padding","justifyContent","socialLinksA","library","add","fab","fas","AppLight","styles","title","scroll","to","onClick","AppDark","App","switchTheme","mode","styleUrl","render","bind","Boolean","window","location","hostname","match","ReactDOM","theme","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.106b07ac.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Grid, Cell} from 'react-mdl';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nconst LandingPage = (props) => {\r\n        return (\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Grid style={props.styling.landingGrid}>\r\n                    <Cell col={12}>\r\n                        <img style={props.styling.avatarImg} src={process.env.PUBLIC_URL + \"/myAvatar.svg\"} alt=\"avatar\" />\r\n                        <div style={props.styling.bannerText}>\r\n                            <h1 style={props.styling.bannerTextH1}>Adil Rasiyani</h1>\r\n                            <h2 style={props.styling.bannerTextH2}>Texas A&M University 2023</h2>\r\n                            <hr style={props.styling.bannerTextHr}/>\r\n                            <p style={props.styling.bannerTextP}>\r\n                                Java | C++ | Python | React | Selenium | Competitive Programming\r\n                            </p>\r\n                            <div style={props.styling.socialLinks}>\r\n                                {/* LinkedIn profile*/}\r\n                                <a href=\"https://linkedin.com/in/adil-rasiyani\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <FontAwesomeIcon icon={['fab', 'linkedin'] } size=\"5x\" color=\"#efefef\"/>\r\n                                </a>\r\n\r\n                                {/* GitHub profile*/}\r\n                                <a href=\"https://github.com/AdilRas\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <FontAwesomeIcon icon={['fab', 'github-square'] } size=\"5x\" color=\"#efefef\"/>\r\n                                </a>\r\n\r\n                                {/* LinkedIn profile*/}\r\n                                <a href=\"https://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <FontAwesomeIcon icon={['fab', 'facebook-square'] } size=\"5x\" color=\"#efefef\"/>\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, {Component} from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <h1>About</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport {Grid, Cell, Card, CardTitle, CardActions, IconButton, CardMenu, CardText, Button} from 'react-mdl';\r\n\r\nconst PythonProjs = (props) => {\r\n    return (\r\n        <div className=\"projects-display\">\r\n            <Grid className={props.styling.projectsGrid}>\r\n                <Cell col={3}>\r\n                    <Card shadow={3} style={{minWidth: '450', margin: 'auto'}}>\r\n                        <CardTitle style={{textAlign: \"center\", color: \"#000\", height: '150px', background: 'url(https://i.pinimg.com/originals/0f/60/19/0f6019e15f1d8ae07e7e8ea16d242676.png) center / cover'}}></CardTitle>\r\n                        <CardText>Nand2Tetris Hardware Simulator Test Case Generator</CardText>\r\n                        <CardActions border style={{textAlign: \"center\"}}>\r\n                            <Button colored href=\"https://github.com/AdilRas/Nand2TetrisCaseGenerator\" target=\"_blank\">GitHub</Button>\r\n                            <Button colored href=\"https://www.nand2tetris.org/course\" target=\"_blank\">Nand2Tetris</Button>\r\n                        </CardActions>\r\n                        <CardMenu>\r\n                            <IconButton name=\"share\"/>\r\n                        </CardMenu>\r\n                    </Card>\r\n                </Cell>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PythonProjs;","import React from 'react';\r\nimport {Grid, Cell, Card, CardTitle, CardActions, IconButton, CardMenu, CardText, Button} from 'react-mdl';\r\n\r\nconst JavaProjs = (props) => {\r\n    return (\r\n        <div className=\"projects-display\">\r\n            <Grid className={props.styling.projectsGrid}>\r\n                <Cell col={3}>\r\n                    <Card shadow={3} style={{minWidth: '450', margin: 'auto'}}>\r\n                        <CardTitle style={{textAlign: \"center\", color: \"#000\", height: '150px', background: 'url(https://cybernews.com/wp-content/uploads/2019/01/discord.jpg) center / cover'}}></CardTitle>\r\n                        <CardText>A Discord Bot for Dulles High School Students</CardText>\r\n                        <CardActions border style={{textAlign: \"center\"}}>\r\n                            <Button colored href=\"https://github.com/AdilRas/DiscordBot\" target=\"_blank\">GitHub</Button>\r\n                            <Button colored href=\"https://discordapp.com/developers/docs/intro\" target=\"_blank\">Discord API</Button>\r\n                        </CardActions>\r\n                        <CardMenu>\r\n                            <IconButton name=\"share\"/>\r\n                        </CardMenu>\r\n                    </Card>\r\n                </Cell>\r\n                <Cell col={3}>\r\n                    <Card shadow={3} style={{minWidth: '450', margin: 'auto'}}>\r\n                        <CardTitle style={{textAlign: \"center\", color: \"#000\", height: '150px', background: 'url(https://pandorafms.com/blog/wp-content/uploads/2018/05/what-is-an-algorithm-featured.png) center / cover'}}></CardTitle>\r\n                        <CardText>Useful Algorithm & Data Structure Implementations in Java</CardText>\r\n                        <CardActions border style={{textAlign: \"center\"}}>\r\n                            <Button colored href=\"https://github.com/AdilRas/Implementations\" target=\"_blank\">GitHub</Button>\r\n                            <Button colored href=\"https://www.geeksforgeeks.org/fundamentals-of-algorithms/\" target=\"_blank\">Algo Fundamentals</Button>\r\n                        </CardActions>\r\n                        <CardMenu>\r\n                            <IconButton name=\"share\"/>\r\n                        </CardMenu>\r\n                    </Card>\r\n                </Cell>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JavaProjs;","import React, {Component} from 'react';\r\nimport { Tabs, Tab } from 'react-mdl';\r\nimport PythonProjs from './PythonProjs';\r\nimport JavaProjs from './JavaProjs';\r\n\r\nclass Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: 0,\r\n        };\r\n    }\r\n    getContent() {\r\n        if(this.state.activeTab === 0) {\r\n            return (\r\n                <PythonProjs styling={this.props.styling}/>\r\n            );\r\n        } else if(this.state.activeTab === 1) {\r\n            return (\r\n                <JavaProjs styling={this.props.styling}/>\r\n            );\r\n        } else if(this.state.activeTab === 2) {\r\n            return (\r\n                <h1>Coming soon</h1>\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"category-tabs\">\r\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({activeTab: tabId})} ripple>\r\n                    <Tab>Python</Tab>\r\n                    <Tab>Java</Tab>\r\n                    <Tab>C++</Tab>\r\n                </Tabs>\r\n\r\n                <section className=\"projects-section\">\r\n                    {this.getContent()}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, {Component} from 'react';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return (\r\n            <h1>Resume Page</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Resume;\r\n","import React, {Component} from 'react';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <h1>Contact</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport LandingPage from './LandingPage';\r\nimport About from './About';\r\nimport Projects from './projects/Projects';\r\nimport Resume from './Resume';\r\nimport Contact from './Contact';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nconst Main = (props) => {\r\n    console.log(\"MAIN\" + props.styling);\r\n    return ( \r\n        <Switch> \r\n            <Route exact path=\"/\">\r\n                <LandingPage styling={props.styling}/>\r\n            </Route>\r\n            <Route path=\"/about\">\r\n                <About styling={props.styling}/>\r\n            </Route>\r\n            <Route path=\"/projects\">\r\n                <Projects styling={props.styling}/>\r\n            </Route>\r\n            <Route path=\"/resume\">\r\n                <Resume styling={props.styling}/>\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n                <Contact styling={props.styling}/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Main;","/**     background: '#a73737',\r\n    background: '-webkit-linear-gradient(to top, #500000, #820000)', \r\n    background: 'linear-gradient(to left, #5a1515, #8c1515)',\r\n */\r\nconst headerColor = {\r\n    background: '#ff9966',\r\n    background: '-webkit-linear-gradient(to right, #ff5e62, #ff9966)', \r\n    background: 'linear-gradient(to right, #ff5e62, #ff8066)',\r\n}\r\n\r\nconst landingGrid = {\r\n    background: '#ff9966',\r\n    background: '-webkit-linear-gradient(to right, #ff5e62, #ff9966)', \r\n    background: 'linear-gradient(to right, #ff5e62, #ff8066)',\r\n    width: '101%',\r\n    height: '98.2%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    overflowY: 'scroll',\r\n    overflowX: 'hidden',\r\n}\r\n\r\nconst avatarImg = {\r\n    display: 'block',\r\n    margin: '0 auto',\r\n    height: '250px',\r\n    paddingTop: '1%',\r\n    paddingBottom: '1%',\r\n}\r\n\r\nconst bannerText = {\r\n    backgroundColor: 'black',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    opacity: '0.8',\r\n    width: '75%',\r\n    margin: 'auto',\r\n    borderRadius: '10px',\r\n}\r\n\r\nconst bannerTextH1 = {\r\n    fontSize: '66px',\r\n    fontWeight: 'bold',\r\n    paddingBottom: '0px',\r\n    marginBottom: '0px',\r\n    color: 'white',\r\n}\r\n\r\nconst bannerTextH2 = {\r\n    paddingBottom: '0px',\r\n    marginTop: '0px',\r\n    color: 'white',\r\n}\r\n\r\nconst bannerTextHr = {\r\n    borderTop: '5px dashed white',\r\n    width: '60%',\r\n    margin: 'auto',\r\n}\r\n\r\nconst bannerTextP = {\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    padding: '1em',\r\n}\r\n\r\nconst socialLinks = {\r\n    width: '40%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    paddingBottom: '1%',\r\n}\r\n\r\nconst socialLinksA = {\r\n    color: 'white',\r\n    padding: '8px',\r\n}\r\n\r\nconst projectsGrid = {\r\n    justifyContent: 'center',\r\n}\r\n\r\nexport default {\r\n    headerColor, landingGrid, avatarImg, \r\n    bannerTextH1, bannerTextH2, bannerTextHr, bannerText, bannerTextP, \r\n    socialLinks, socialLinksA, projectsGrid\r\n};","import React, {Component} from 'react';\r\nimport {Drawer, Navigation, Header, Layout, Button, Content} from 'react-mdl';\r\nimport Main from './Main';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from '../AppLight.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nlibrary.add(fab, fas);\r\n\r\nclass AppLight extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"demo-big-content\">\r\n                <Layout>\r\n                    <Header style={styles.headerColor} title=\"Portfolio\" scroll>\r\n                        <Navigation>\r\n                            <Link to=\"/\">Home</Link>\r\n                            <Link to=\"/resume\">Resume</Link>\r\n                            <Link to=\"/contact\">Contact</Link>\r\n                            <Link to=\"/projects\">Projects</Link>\r\n                            <Link to=\"/about\">About</Link>\r\n                        </Navigation>\r\n                        <Button onClick={this.props.onClick}>\r\n                            <FontAwesomeIcon icon={['fas', 'code']} color=\"black\"></FontAwesomeIcon>\r\n                        </Button>\r\n                    </Header>\r\n                    <Drawer title=\"Menu\">\r\n                        <Navigation>\r\n                            <Link to=\"/\">Home</Link>\r\n                            <Link to=\"/resume\">Resume</Link>\r\n                            <Link to=\"/contact\">Contact</Link>\r\n                            <Link to=\"/projects\">Projects</Link>\r\n                            <Link to=\"/about\">About</Link>\r\n                        </Navigation>\r\n                    </Drawer>\r\n                    <Content>\r\n                        <Main styling={styles}/>\r\n                    </Content>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppLight;","const headerColor = {\r\n    background: '#0F2027',\r\n    background: '-webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027)',\r\n    background: 'linear-gradient(to right, #2C5364, #203A43, #0F2027)',\r\n}\r\n\r\nconst landingGrid = {\r\n    background: '#0F2027',\r\n    background: '-webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027)',\r\n    background: 'linear-gradient(to right, #2C5364, #203A43, #0F2027)',\r\n    width: '101%',\r\n    height: '98.2%',\r\n    position: 'absolute',\r\n    top: '0',\r\n    overflow: 'scroll',\r\n    overflowX: 'hidden',\r\n}\r\n\r\nconst avatarImg = {\r\n    display: 'block',\r\n    margin: '0 auto',\r\n    height: '250px',\r\n    paddingTop: '1%',\r\n    paddingBottom: '1%',\r\n}\r\n\r\nconst bannerText = {\r\n    backgroundColor: 'black',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    opacity: '0.8',\r\n    width: '75%',\r\n    margin: 'auto',\r\n    borderRadius: '10px',\r\n}\r\n\r\nconst bannerTextH1 = {\r\n    fontSize: '66px',\r\n    fontWeight: 'bold',\r\n    paddingBottom: '0px',\r\n    marginBottom: '0px',\r\n    color: 'white',\r\n}\r\n\r\nconst bannerTextH2 = {\r\n    paddingBottom: '0px',\r\n    marginTop: '0px',\r\n    color: 'white',\r\n}\r\n\r\nconst bannerTextHr = {\r\n    borderTop: '5px dashed white',\r\n    width: '60%',\r\n    margin: 'auto',\r\n}\r\n\r\nconst bannerTextP = {\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    padding: '1em',\r\n}\r\n\r\nconst socialLinks = {\r\n    width: '40%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    paddingBottom: '1%',\r\n\r\n}\r\n\r\nconst socialLinksA = {\r\n    color: 'white',\r\n    padding: '8px',\r\n}\r\n\r\nconst projectsGrid = {\r\n    justifyContent: 'center',\r\n}\r\n\r\nexport default {\r\n    headerColor, landingGrid, avatarImg, \r\n    bannerTextH1, bannerTextH2, bannerTextHr, bannerText, bannerTextP, \r\n    socialLinks, socialLinksA, projectsGrid\r\n};","import React, {Component} from 'react';\r\nimport {Drawer, Navigation, Header, Layout, Button, Content} from 'react-mdl';\r\nimport Main from './Main';\r\nimport styles from '../AppDark.css.js';\r\nimport {Link} from 'react-router-dom';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nlibrary.add(fab, fas);\r\n\r\nclass AppDark extends Component {\r\n    render() {\r\n    return (\r\n        <div className=\"demo-big-content\">\r\n            <Layout>\r\n                <Header style={styles.headerColor} title=\"Portfolio\" scroll>\r\n                    <Navigation>\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/resume\">Resume</Link>\r\n                        <Link to=\"/contact\">Contact</Link>\r\n                        <Link to=\"/projects\">Projects</Link>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </Navigation>\r\n                    <Button onClick={this.props.onClick}>\r\n                        <FontAwesomeIcon icon={['fas', 'code']} color=\"white\"></FontAwesomeIcon>\r\n                    </Button>\r\n                </Header>\r\n                <Drawer title=\"Menu\">\r\n                    <Navigation>\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/resume\">Resume</Link>\r\n                        <Link to=\"/contact\">Contact</Link>\r\n                        <Link to=\"/projects\">Projects</Link>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </Navigation>\r\n                </Drawer>\r\n                <Content>\r\n                    <Main styling={styles}/>\r\n                </Content>\r\n            </Layout>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AppDark;","import React, {Component} from 'react';\nimport AppLight from './components/AppLight';\nimport AppDark from './components/AppDark';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {mode: 'light', styleUrl: 'App.css'};\n    this.switchTheme = this.switchTheme.bind(this);\n  }\n  switchTheme = () => {\n    if(this.state.mode === \"light\") {\n      this.setState({\n        mode: 'dark',\n        styleUrl: '/src/AppDark.css',\n      });\n      console.log(\"Dark Mode\");\n    } else {\n      this.setState({\n        mode: 'light',\n        styleUrl: '/src/App.css',\n      });\n      console.log(\"Light Mode\");\n    }\n  }\n\n  getContent() {\n    if(this.state.mode === 'light') {\n      return (\n        <AppLight onClick={this.switchTheme} />\n      );\n    } else {\n      return (\n        <div>\n          <AppDark onClick={this.switchTheme} />\n        </div>\n      );\n    }\n  }\n  render = () => {    \n    return this.getContent();\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\n\n\nReactDOM.render(\n    <ThemeProvider theme={{mode: 'light'}}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </ThemeProvider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}